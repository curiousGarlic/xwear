{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log('love');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get(); // collectionRef\n  // \t.get()\n  // \t.then(snapshot => {\n  // \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  // \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n  // \t})\n  // \t.catch(error => dispatch(fetchCollectionsFailure(error.message))); \n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/jamshidazizov/Git/xwear/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AACA,OAAOC,eAAP,MAA6B,cAA7B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAJwC,CAKvC;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMb,SAAS,CACdK,eAAe,CAACS,uBADF,EAEdR,qBAFc,CAAf;AAIA","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes  from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n\tyield console.log('love');\n\n\tconst collectionRef = firestore.collection('collections');\n\tconst snapshot = yield collectionRef.get();\n\t\t// collectionRef\n\t\t// \t.get()\n\t\t// \t.then(snapshot => {\n\t\t// \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t// \t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t\t// \t})\n\t\t// \t.catch(error => dispatch(fetchCollectionsFailure(error.message))); \n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeEvery(\n\t\tShopActionTypes.FETCH_COLLECTIONS_START, \n\t\tfetchCollectionsAsync\n\t)\n}"]},"metadata":{},"sourceType":"module"}